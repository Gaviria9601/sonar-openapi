swagger: '2.0'
info:
  title: Card - Credit information
  description: >-
    Permite consultar el detalle de una tarjeta de cr?dito, donde ser?n
    retornados todos los campos de estados, saldos, deudas y fechas de la
    tarjeta.
  contact:
    name: Bancolombia API Working Group
    email: apigroup@bancolombia.com.co
    url: 'https://developer.grupobancolombia.com.co/contact'
  license:
    name: ''
    url: ''
  termsOfService: ''
  version: 1.0.0
  x-ibm-name: credit-card-infomation
host: $(catalog.host)
basePath: /v1/operations/product-specific/cards/credit
paths:
  '/{cardId}/detail':
    get:
      summary: Obtiene la informaci?n detallada de la tarjeta de cr?dito.
      description: >-
        Permite consultar el detalle de una tarjeta de cr?dito, donde ser?n
        retornados todos los campos de estados, saldos, deudas y fechas de la
        tarjeta.  Recibiendo como par?metros de entrada el cardID que
        corresponde al n?mero de la tarjeta de cr?dito de la cual se quiere
        consultar la informaci?n.
      responses:
        '200':
          schema:
            $ref: '#/definitions/successDetailsCreditCard'
          description: Success. Resource has been found.
          headers:
            X-API-Version:
              type: number
              format: float
              description: version semantic of API
            X-RateLimit-Limit:
              type: integer
              description: Resquest limit per hour
          examples:
            meta:
              _messageId: c4e6bd04-5149-11e7-b114-b2f933d5fe66
              _version: 1
              _requestDate: '2017-01-24T05:00:00.000Z'
              _responseSize: 1
              _clientRequest: acxff62e-6f12-42de-9012-3e7304418abd
            data:
              - header:
                  type: CreditCard
                  id: 'CreditCard-0009123456789078-2017-01-24T05:00:00.000Z'
                documentType: CC
                documentId: '12345678'
                cardId: 0009123456789078
                paymentDate: '2017-05-01'
                expirationDate: '1705'
                pesosMinimumPayment: 300000
                pesosDebtValue: 200000
                dollarMinimumPayment: 100
                dollarDebtValue: 70
                totalBalanceAvailable: 600000
                balanceAvailableAdvance: 200000
                totalPaymentPesos: 300000
                totalPaymentDollar: 100
                overQuotaValue: 100000
                valueTotalQuota: 100000
                stateCard: Activa
            links:
              self: >-
                https://api.bancolombia.com/v1/operations/specific-products/cards/credit/0001234567890789/detail
        '400':
          schema:
            $ref: '#/definitions/failure'
          description: >-
            La solicitud no pudo ser entendida o hacen falta par?metros
            requeridos.
        '401':
          schema:
            $ref: '#/definitions/failure'
          description: >-
            La autenticaci?n ha fallado o el usuario no tiene permisos para la
            operaci?n solicitada.
        '404':
          schema:
            $ref: '#/definitions/failure'
          description: Recurso solicitado no fue encontrado por el sistema
        '409':
          schema:
            $ref: '#/definitions/failure'
          description: >-
            La solicitud no pudo ser completada debido a conflictos en la
            informaci?n.
        '500':
          schema:
            $ref: '#/definitions/failure'
          description: Error interno del servidor. Intente de nuevo m?s tarde.
        '503':
          schema:
            $ref: '#/definitions/failure'
          description: >-
            El servicio no est? disponible temporalmente. Intente de nuevo m?s
            tarde.
        default:
          description: Error inesperado.
      operationId: getCreditCardDetails
      tags:
        - Credit
        - Card
      security:
        - OAuth - Provider from OTP - Flow Access Code:
            - 'Card-credit:read:user'
    parameters:
      - name: cardId
        type: string
        required: true
        in: path
        description: N?mero de la tarjeta de cr?dito
definitions:
  successDetailsCreditCard:
    type: object
    required:
      - meta
      - data
    properties:
      meta:
        $ref: '#/definitions/meta'
      data:
        type: array
        uniqueItems: true
        items:
          type: object
          required:
            - header
          properties:
            header:
              $ref: '#/definitions/headerData'
            documentType:
              type: string
              example: CC
            documentId:
              type: string
              example: '12345678'
            cardId:
              type: string
              example: 000123456789078
            paymentDate:
              type: string
              format: date
              example: '2017-05-01'
            expirationDate:
              type: string
              format: date
              example: '1705'
            pesosMinimumPayment:
              type: number
              format: float
              example: 300000.05
            pesosDebtValue:
              type: number
              format: float
              example: 150000.85
            dollarMinimumPayment:
              type: number
              format: float
              example: 100.5
            dollarDebtValue:
              type: number
              format: float
              example: 70.05
            totalBalanceAvailable:
              type: number
              format: float
              example: 600000.13
            balanceAvailableAdvance:
              type: number
              format: float
              example: 200000
            totalPaymentPesos:
              type: number
              format: float
              example: 300000.85
            totalPaymentDollar:
              type: number
              format: float
              example: 100.5
            overQuotaValue:
              type: number
              format: float
              example: 100000
            valueTotalQuota:
              type: number
              format: float
              example: 100000
            stateCard:
              type: string
              example: Activo
            links:
              $ref: '#/definitions/linkData'
      links:
        $ref: '#/definitions/topLevelLinks'
    additionalProperties: false
  meta:
    description: Non-standard meta-information
    type: object
    required:
      - _messageId
      - _version
      - _requestDate
      - _responseSize
      - _clientRequest
    properties:
      _messageId:
        type: string
        example: c4e6bd04-5149-11e7-b114-b2f933d5fe66
      _version:
        type: number
        format: float
        example: 1
      _requestDate:
        type: string
        format: date-time
        example: '2017-01-24T05:00:00.000Z'
      _responseSize:
        type: integer
        example: 1
      _clientRequest:
        type: string
        example: acxff62e-6f12-42de-9012-3e7304418abd
    additionalProperties: true
  topLevelLinks:
    description: URLs related to the primary data.
    type: object
    allOf:
      - $ref: '#/definitions/links'
  links:
    description: A resource object **MAY** contain references to other resource objects
    type: object
    properties:
      self:
        description: 'A self member, whose value is a URL for the relationship data'
        type: string
        format: uri
        example: >-
          https://api.bancolombia.com/v1/operations/product-specific/cards/credit/detail
      related:
        type: string
        format: uri
  headerData:
    description: The "type" and "id" for each data.
    type: object
    required:
      - type
      - id
    properties:
      type:
        type: string
        example: CreditCard
      id:
        type: string
        example: 'CreditCard-0001234567890789-2017-01-24T05:00:00.000Z'
    additionalProperties: false
  linkData:
    description: A resource object contain references to resource
    type: object
    properties:
      info:
        description: CreditCard basic information
        type: string
        format: uri
        example: >-
          https://api.bancolombia.com/v1/operations/product-specific/cards/credit/detail
    additionalProperties: true
  failure:
    type: object
    required:
      - errors
    properties:
      meta:
        $ref: '#/definitions/meta'
      errors:
        type: array
        items:
          $ref: '#/definitions/error'
        uniqueItems: true
    additionalProperties: false
  error:
    type: object
    properties:
      id:
        description: A unique identifier for this particular occurrence of the problem.
        type: string
      href:
        description: >-
          A URI that **MAY** yield further details about this particular
          occurrence of the problem.
        type: string
      status:
        description: >-
          The HTTP status code applicable to this problem, expressed as a string
          value.
        type: string
      code:
        description: 'An application-specific error code, expressed as a string value.'
        type: string
      title:
        description: >-
          A short, human-readable summary of the problem. It **SHOULD NOT**
          change from occurrence to occurrence of the problem, except for
          purposes of localization.
        type: string
      detail:
        description: >-
          A human-readable explanation specific to this occurrence of the
          problem.
        type: string
    additionalProperties: true
    required:
      - detail
schemes:
  - https
produces:
  - application/vnd.bancolombia.v1+json
x-ibm-configuration:
  enforced: true
  testable: true
  phase: specified
  cors:
    enabled: true
  properties:
    DPEndpoint:
      value: >-
        https://api.us.apiconnect.ibmcloud.com/playgroundbluemix-dev/development/ahinestr-card-credit-information/getData
      description: ''
      encoded: false
    catalogName:
      value: ''
      description: ''
      encoded: false
    systemId:
      value: APIC
      description: ''
      encoded: false
  catalogs:
    apic-dev:
      properties:
        catalogName: development
    Development:
      properties:
        catalogName: development
        DPEndpoint: >-
          https://201.221.124.199:59065/intf/ServiciosDeDesarrollo/Integracion/ChannelAdapterDP/Enlace/V1.0
        systemId: APIC
    Testing:
      properties:
        catalogName: testing
        DPEndpoint: >-
          https://201.221.124.200:59065/intf/ServiciosDeDesarrollo/Integracion/ChannelAdapterDP/Enlace/V1.0
        systemId: APIC
    Production:
      properties:
        catalogName: production
        DPEndpoint: >-
          https://201.221.125.22:59065/intf/ServiciosDeDesarrollo/Integracion/ChannelAdapterDP/Enlace/V1.0
        systemId: APIC
    SandBox:
      properties:
        catalogName: sandbox
  extensions:
    API-Authors: 1.0.0
  assembly:
    execute:
      - activity-log:
          title: request-in-log
          content: payload
          error-content: payload
          version: 1.0.0
      - gatewayscript:
          title: process-request
          version: 1.0.0
          source: >-
            /**************************************************************************************************************
             * Developer: Alexander Hinestroza Palcios - ahinestr@bancolombia.com.co
             * Validar y procesar el request
             **************************************************************************************************************/

            const docTypes = {
                "CC": "CC",
                "CD": "CD",
                "CE": "CE",
                "NIT": "NIT",
                "FD": "FID",
                "PAS": "PA",
                "IEPN": "PN",
                "IEPJ": "PJ",
                "RC": "RC",
                "TI": "TI"
            }


            //get cardId

            let cardId;

            let systemId = apim.getvariable('api.properties.systemId');

            let uid = new Date().valueOf().toString().substring(1, 12);

            //getting Date

            const requestDate = apim.getvariable('request.date');

            const today = new Date(requestDate);

            const tDateLoc = new Date(today.getTime() - (3600 *
            5000)).toISOString();


            apim.setvariable('ctx.uid', uid);

            apim.setvariable('ctx.tDateLoc', tDateLoc);


            let customerIdent = apim.getvariable('oauth.introspect.username');

            let identType, identNumber;

            cardId = apim.getvariable('request.parameters.cardId');

            //validate cardId

            if (!cardId || typeof (cardId) == 'undefined' || cardId.length < 1
            || cardId.length > 16) {
                //raise an Error
                apim.setvariable('ctx.errorMsg', 'Longitud cardId no permitida');
                apim.error('PropertyError', 400, 'Error en invocaci?n', 'Longitud cardId no permitida');
            } else {
                if (customerIdent) {
                    identType = docTypes[customerIdent.split('-')[0]];
                    identNumber = customerIdent.split('-')[1];
                    if (!identType || !identNumber) {
                        apim.setvariable('ctx.errorMsg', 'Mensaje enviado por el sistema consumidor no es v?lido');
                        apim.error('ParameterError', 400, 'Error en par?metros', 'Mensaje enviado por el sistema consumidor no es v?lido');
                    } else {
                        apim.setvariable('ctx.identType', identType);
                        apim.setvariable('ctx.identNumber', identNumber);
                    }
                } else {
                    apim.setvariable('ctx.errorMsg', 'Missing customerIdent parameter');
                    apim.error('ParameterError', 400, 'Error en par?metros', 'Mensaje enviado por el sistema consumidor no es v?lido');
                }

                var link = "https://" +
                          apim.getvariable('api.endpoint.hostname') + "/" +
                          apim.getvariable('api.org.name') + "/" +
                          apim.getvariable('env.path') + "/" +//Catalogo en el que se encuentra el producto
                          apim.getvariable('api.root') +//Base Path
                          apim.getvariable('api.operation.path');

                link = link.replace(/\{cardId\}/g,cardId);

                //set context setvariables
                apim.setvariable('ctx.selfLink',link);
                apim.setvariable('ctx.systemId', systemId);
                apim.setvariable('ctx.identType', identType);
                apim.setvariable('ctx.identNumber', identNumber);
                apim.setvariable('ctx.cardId', cardId);
            }
      - map:
          title: map-Request
          inputs:
            systemId:
              schema:
                type: string
              variable: ctx.systemId
            uid:
              schema:
                type: string
              variable: ctx.uid
            identType:
              schema:
                type: string
              variable: ctx.identType
            identNumber:
              schema:
                type: string
              variable: ctx.identNumber
            cardId:
              schema:
                type: string
              variable: ctx.cardId
          outputs:
            output:
              schema:
                description: ''
                type: object
                properties:
                  Envelope:
                    type: object
                    properties:
                      Header:
                        type: object
                        properties:
                          requestHeader:
                            type: object
                            properties:
                              systemId:
                                type: string
                                xml:
                                  namespace: ''
                                name: systemId
                              messageId:
                                type: string
                                xml:
                                  namespace: ''
                                name: messageId
                              timestamp:
                                type: string
                                xml:
                                  namespace: ''
                                name: timestamp
                              messageContext:
                                type: object
                                properties:
                                  property:
                                    type: object
                                    properties:
                                      key:
                                        type: string
                                        xml:
                                          namespace: ''
                                        name: key
                                      value:
                                        type: string
                                        xml:
                                          namespace: ''
                                        name: value
                                    xml:
                                      namespace: ''
                                    name: property
                                xml:
                                  namespace: ''
                                name: messageContext
                              userId:
                                type: object
                                properties:
                                  userName:
                                    type: string
                                    xml:
                                      namespace: ''
                                    name: userName
                                  userToken:
                                    type: string
                                    xml:
                                      namespace: ''
                                    name: userToken
                                xml:
                                  namespace: ''
                                name: userId
                              destination:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    xml:
                                      namespace: ''
                                    name: name
                                  namespace:
                                    type: string
                                    xml:
                                      namespace: ''
                                    name: namespace
                                  operation:
                                    type: string
                                    xml:
                                      namespace: ''
                                    name: operation
                                xml:
                                  namespace: ''
                                name: destination
                              classifications:
                                type: object
                                properties:
                                  classification:
                                    type: string
                                    xml:
                                      namespace: ''
                                    name: classification
                                xml:
                                  namespace: ''
                                name: classifications
                            xml:
                              namespace: >-
                                http://grupobancolombia.com/ents/SOI/MessageFormat/V2.1
                              prefix: v2
                            name: requestHeader
                        name: Header
                      Body:
                        type: object
                        properties:
                          consultarInformacionDetallada:
                            type: object
                            properties:
                              informacionTecnica:
                                type: object
                                properties:
                                  numeroRastreo:
                                    type: string
                                    xml:
                                      namespace: ''
                                    name: numeroRastreo
                                xml:
                                  namespace: ''
                                name: informacionTecnica
                              informacionCliente:
                                type: object
                                properties:
                                  identificacionCliente:
                                    type: object
                                    properties:
                                      tipoDocumento:
                                        type: string
                                        xml:
                                          namespace: ''
                                        name: tipoDocumento
                                      numeroDocumento:
                                        type: string
                                        xml:
                                          namespace: ''
                                        name: numeroDocumento
                                    xml:
                                      namespace: ''
                                    name: identificacionCliente
                                xml:
                                  namespace: ''
                                name: informacionCliente
                              informacionBasicaTarjeta:
                                type: object
                                properties:
                                  numeroTarjeta:
                                    type: string
                                    xml:
                                      namespace: ''
                                    name: numeroTarjeta
                                xml:
                                  namespace: ''
                                name: informacionBasicaTarjeta
                            xml:
                              namespace: >-
                                http://grupobancolombia.com/intf/Producto/Tarjetas/ConsultaInformacionTarjetaCredito/V1.0
                              prefix: v1
                            name: consultarInformacionDetallada
                        name: Body
                    xml:
                      namespace: 'http://schemas.xmlsoap.org/soap/envelope/'
                      prefix: soapenv
                    name: Envelope
                xml:
                  namespace: ''
                example: "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:v2=\"http://grupobancolombia.com/ents/SOI/MessageFormat/V2.1\" xmlns:v1=\"http://grupobancolombia.com/intf/Producto/Tarjetas/ConsultaInformacionTarjetaCredito/V1.0\">\r\n   <soapenv:Header>\r\n      <v2:requestHeader>\r\n         <systemId>?</systemId>\r\n         <messageId>?</messageId>\r\n         <!--Optional:-->\r\n         <timestamp>?</timestamp>\r\n         <!--Optional:-->\r\n         <messageContext>\r\n            <!--1 or more repetitions:-->\r\n            <property>\r\n               <key>?</key>\r\n               <value>?</value>\r\n            </property>\r\n         </messageContext>\r\n         <userId>\r\n            <userName>?</userName>\r\n            <!--Optional:-->\r\n            <userToken>?</userToken>\r\n         </userId>\r\n         <!--Optional:-->\r\n         <destination>\r\n            <!--Optional:-->\r\n            <name>?</name>\r\n            <!--Optional:-->\r\n            <namespace>?</namespace>\r\n            <!--Optional:-->\r\n            <operation>?</operation>\r\n         </destination>\r\n         <!--Optional:-->\r\n         <classifications>\r\n            <!--1 or more repetitions:-->\r\n            <classification>?</classification>\r\n         </classifications>\r\n      </v2:requestHeader>\r\n   </soapenv:Header>\r\n   <soapenv:Body>\r\n      <v1:consultarInformacionDetallada>\r\n         <informacionTecnica>\r\n            <numeroRastreo>?</numeroRastreo>\r\n         </informacionTecnica>\r\n         <informacionCliente>\r\n            <identificacionCliente>\r\n               <tipoDocumento>?</tipoDocumento>\r\n               <numeroDocumento>?</numeroDocumento>\r\n            </identificacionCliente>\r\n         </informacionCliente>\r\n         <informacionBasicaTarjeta>\r\n            <numeroTarjeta>?</numeroTarjeta>\r\n         </informacionBasicaTarjeta>\r\n      </v1:consultarInformacionDetallada>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
              variable: message.body
              content: application/xml
          actions:
            - set: >-
                output.Envelope.Body.consultarInformacionDetallada.informacionBasicaTarjeta.numeroTarjeta
              from: cardId
            - set: output.Envelope.Header.requestHeader.systemId
              from: systemId
            - set: output.Envelope.Header.requestHeader.messageId
              from: uid
            - set: output.Envelope.Header.requestHeader.timestamp
              default: $(ctx.tDateLoc)
            - set: output.Envelope.Header.requestHeader.userId.userName
              from: systemId
            - set: output.Envelope.Header.requestHeader.destination.name
              default: ConsultaInformacionTarjetaCredito
            - set: output.Envelope.Header.requestHeader.destination.namespace
              default: >-
                http://grupobancolombia.com/intf/Producto/Tarjetas/ConsultaInformacionTarjetaCredito/V1.0
            - set: output.Envelope.Header.requestHeader.destination.operation
              default: consultarInformacionDetallada
            - set: >-
                output.Envelope.Body.consultarInformacionDetallada.informacionCliente.identificacionCliente.tipoDocumento
              from: identType
            - set: >-
                output.Envelope.Body.consultarInformacionDetallada.informacionCliente.identificacionCliente.numeroDocumento
              from: identNumber
            - set: >-
                output.Envelope.Body.consultarInformacionDetallada.informacionTecnica.numeroRastreo
              from: uid
          version: 1.0.0
          options:
            includeEmptyXMLElements: false
      - activity-log:
          title: request-out-log
          content: payload
          error-content: payload
          version: 1.0.0
      - switch:
          title: switch
          case:
            - condition: $(env.path) == 'sandbox'
              execute:
                - gatewayscript:
                    title: dummy-sandbox
                    version: 1.0.0
                    source: >-
                      const allowedCards = ['4513074346037804',
                      '4513080829371529', '1234567890123456'];



                      //Read de input

                      const nssoap =
                      'http://schemas.xmlsoap.org/soap/envelope/',

                          tns
                      =
                      'http://grupobancolombia.com/intf/Producto/Tarjetas/ConsultaInformacionTarjetaCredito/V1.0',

                          tns2
                      =
                      'http://grupobancolombia.com/ents/SOI/MessageFormat/V2.1';





                      apim.readInputAsXML(function (error, nodelist) {

                          if (error) {

                              //Do something

                              apim.error('SOAPFormatError');

                              apim.setvariable('message.status.code', 404);

                          } else {

                              const requestDate
                      = apim.getvariable('request.date');

                              const today = new Date(requestDate);

                              const vFechaPago = new Date(today.getTime() - (3600
                      * 24000 * 7)).toISOString();

                              const tDateLoc2 = new Date(today.getTime() - (3600
                      * 24000 * 14)).toISOString();



                              //read some variables

                              const soapEnv = nodelist.item(0);

                              const header
                      = soapEnv.getElementsByTagNameNS(nssoap,
                      'Header').item(0);

                              const requestHeader
                      = soapEnv.getElementsByTagNameNS(tns2,
                      'requestHeader').item(0);

                              let systemId
                      =
                      requestHeader.getElementsByTagName('systemId').item(0).textContent;

                              let messageId
                      =
                      requestHeader.getElementsByTagName('messageId').item(0).textContent;

                              let timestamp
                      =
                      requestHeader.getElementsByTagName('timestamp').item(0).textContent;



                              const responsePayload
                      = soapEnv.getElementsByTagNameNS(tns,
                      'consultarInformacionDetallada').item(0);

                              let tipoDocumento
                      =
                      responsePayload.getElementsByTagName('tipoDocumento').item(0).textContent;

                              let numeroDocumento
                      =
                      responsePayload.getElementsByTagName('numeroDocumento').item(0).textContent;

                              let numeroTarjeta
                      =
                      responsePayload.getElementsByTagName('numeroTarjeta').item(0).textContent;



                              //validate credictCard Number

                              if (!numeroTarjeta || isNaN(numeroTarjeta)) {

                                  apim.setvariable('ctx.statusCode',
                      'BusinessException');

                                  //vlidate allowed cards numbers

                              } else if (allowedCards.indexOf(numeroTarjeta) < 0)
                      {

                                  apim.setvariable('ctx.statusCode',
                      'SystemException');

                              } else {

                                  apim.setvariable('ctx.statusCode', 'Success');

                              }



                              //set context variable to make dinamic response

                              apim.setvariable('ctx.vSystemId', systemId);

                              apim.setvariable('ctx.vMessageId', messageId);

                              apim.setvariable('ctx.vTimestamp', timestamp);

                              apim.setvariable('ctx.vTipoDocumento',
                      tipoDocumento);

                              apim.setvariable('ctx.vNumeroDocumento',
                      numeroDocumento);

                              apim.setvariable('ctx.vNumeroTarjeta',
                      numeroTarjeta);

                              apim.setvariable('ctx.vFechaPago', vFechaPago);

                              apim.setvariable('ctx.vFechaVenci', tDateLoc2);

                          }

                      });
                - switch:
                    title: switch
                    case:
                      - condition: $(ctx.vNumeroTarjeta)=='4513074346037804'
                        execute:
                          - map:
                              title: map-4513074346037804
                              inputs: {}
                              outputs:
                                output:
                                  schema:
                                    $ref: '#/definitions/successDetailsCreditCard'
                                  variable: message.body
                                  content: application/json
                              actions:
                                - set: output.meta._messageId
                                  default: $(ctx.vMessageId)
                                - set: output.meta._requestDate
                                  default: $(ctx.vTimestamp)
                                - set: output.meta._responseSize
                                  default: '1'
                                - set: output.meta._clientRequest
                                  default: $(client.app.id)
                                - create: output.data
                                  actions:
                                    - set: header.type
                                      default: CreditCard
                                    - set: header.id
                                      default: >-
                                        CreditCard-$(ctx.cardId)-$(ctx.vTimestamp)
                                    - set: documentType
                                      default: $(ctx.identType)
                                    - set: documentId
                                      default: $(ctx.identNumber)
                                    - set: cardId
                                      default: $(ctx.vNumeroTarjeta)
                                    - set: paymentDate
                                      default: $(ctx.vFechaPago)
                                    - set: expirationDate
                                      default: $(ctx.vFechaVenci)
                                    - set: pesosMinimumPayment
                                      default: '100000'
                                    - set: pesosDebtValue
                                      default: '1000000'
                                    - set: dollarDebtValue
                                      default: '1000'
                                    - set: dollarMinimumPayment
                                      default: '100'
                                    - set: totalBalanceAvailable
                                      default: '4700000'
                                    - set: balanceAvailableAdvance
                                      default: '3700000'
                                    - set: totalPaymentPesos
                                      default: '1000000'
                                    - set: totalPaymentDollar
                                      default: '1000'
                                    - set: overQuotaValue
                                      default: '0'
                                    - set: valueTotalQuota
                                      default: '0'
                                    - set: stateCard
                                      default: active
                                - set: output.meta._version
                                  default: '1.0'
                                - set: output.links.self
                                  default: $(ctx.selfLink)
                              version: 1.0.0
                      - condition: $(ctx.vNumeroTarjeta)=='4513080829371529'
                        execute:
                          - map:
                              title: map-4513080829371529
                              inputs: {}
                              outputs:
                                output:
                                  schema:
                                    $ref: '#/definitions/successDetailsCreditCard'
                                  variable: message.body
                                  content: application/json
                              actions:
                                - set: output.meta._messageId
                                  default: $(ctx.vMessageId)
                                - set: output.meta._requestDate
                                  default: $(ctx.vTimestamp)
                                - set: output.meta._responseSize
                                  default: '1'
                                - set: output.meta._clientRequest
                                  default: $(client.app.id)
                                - create: output.data
                                  actions:
                                    - set: header.type
                                      default: CreditCard
                                    - set: header.id
                                      default: >-
                                        CreditCard-$(ctx.cardId)-$(ctx.vTimestamp)
                                    - set: documentType
                                      default: $(ctx.identType)
                                    - set: documentId
                                      default: $(ctx.identNumber)
                                    - set: cardId
                                      default: $(ctx.vNumeroTarjeta)
                                    - set: paymentDate
                                      default: $(ctx.vFechaPago)
                                    - set: expirationDate
                                      default: $(ctx.vFechaVenci)
                                    - set: pesosMinimumPayment
                                      default: '200000'
                                    - set: pesosDebtValue
                                      default: '2000000'
                                    - set: dollarDebtValue
                                      default: '0'
                                    - set: dollarMinimumPayment
                                      default: '0'
                                    - set: totalBalanceAvailable
                                      default: '7000000'
                                    - set: balanceAvailableAdvance
                                      default: '5000000'
                                    - set: totalPaymentPesos
                                      default: '2000000'
                                    - set: totalPaymentDollar
                                      default: '0'
                                    - set: overQuotaValue
                                      default: '0'
                                    - set: valueTotalQuota
                                      default: '0'
                                    - set: stateCard
                                      default: active
                                - set: output.meta._version
                                  default: '1.0'
                                - set: output.links.self
                                  default: $(ctx.selfLink)
                              version: 1.0.0
                      - condition: $(ctx.statusCode)=='BusinessException'
                        execute:
                          - map:
                              title: map-DummyBussinnesError
                              inputs: {}
                              outputs:
                                error:
                                  schema:
                                    $ref: '#/definitions/failure'
                                  variable: message.body
                                  content: application/json
                                statusCode:
                                  schema:
                                    type: string
                                  variable: message.status.code
                              actions:
                                - set: error.meta._messageId
                                  default: $(ctx.uid)
                                - set: error.meta._version
                                  default: '1.0'
                                - set: error.meta._requestDate
                                  default: $(ctx.tDateLoc)
                                - set: error.meta._clientRequest
                                  default: $(client.app.id)
                                - set: error.errors.href
                                  default: 'https://tools.ietf.org/html/rfc7235'
                                - set: error.errors.status
                                  default: '500'
                                - set: error.errors.detail
                                  default: >-
                                    Identificador de la tarjeta debe ser
                                    num?rico
                                - set: error.errors.title
                                  default: Internal Server Error
                                - set: error.errors.code
                                  default: BP500
                                - set: error.meta._responseSize
                                  default: '1'
                                - set: statusCode
                                  default: '500'
                              version: 1.0.0
                      - condition: $(ctx.statusCode)=='SystemException'
                        execute:
                          - map:
                              title: map-DummySystemError
                              inputs: {}
                              outputs:
                                error:
                                  schema:
                                    $ref: '#/definitions/failure'
                                  variable: message.body
                                  content: application/json
                                statusCode:
                                  schema:
                                    type: string
                                  variable: message.status.code
                              actions:
                                - set: error.meta._messageId
                                  default: $(ctx.uid)
                                - set: error.meta._version
                                  default: '1.0'
                                - set: error.meta._requestDate
                                  default: $(ctx.tDateLoc)
                                - set: error.meta._clientRequest
                                  default: $(client.app.id)
                                - set: error.errors.href
                                  default: 'https://tools.ietf.org/html/rfc7235'
                                - set: error.errors.status
                                  default: '500'
                                - set: error.errors.detail
                                  default: Identificador de la tarjeta no permitido
                                - set: error.errors.title
                                  default: internal Server Error
                                - set: error.errors.code
                                  default: SP500
                                - set: error.meta._responseSize
                                  default: '1'
                                - set: statusCode
                                  default: '500'
                              version: 1.0.0
                      - otherwise:
                          - map:
                              title: map-Response
                              inputs: {}
                              outputs:
                                output:
                                  schema:
                                    $ref: '#/definitions/successDetailsCreditCard'
                                  variable: message.body
                                  content: application/json
                              actions:
                                - set: output.meta._messageId
                                  default: $(ctx.vMessageId)
                                - set: output.meta._requestDate
                                  default: $(ctx.vTimestamp)
                                - set: output.meta._responseSize
                                  default: '1'
                                - set: output.meta._clientRequest
                                  default: $(client.app.id)
                                - create: output.data
                                  actions:
                                    - set: header.type
                                      default: CreditCard
                                    - set: header.id
                                      default: >-
                                        CreditCard-$(ctx.cardId)-$(ctx.vTimestamp)
                                    - set: documentType
                                      default: $(ctx.identType)
                                    - set: documentId
                                      default: $(ctx.identNumber)
                                    - set: cardId
                                      default: $(ctx.vNumeroTarjeta)
                                    - set: paymentDate
                                      default: $(ctx.vFechaPago)
                                    - set: expirationDate
                                      default: $(ctx.vFechaVenci)
                                    - set: pesosMinimumPayment
                                      default: '100000'
                                    - set: pesosDebtValue
                                      default: '1000000'
                                    - set: dollarDebtValue
                                      default: '0'
                                    - set: dollarMinimumPayment
                                      default: '0'
                                    - set: totalBalanceAvailable
                                      default: '5000000'
                                    - set: balanceAvailableAdvance
                                      default: '4000000'
                                    - set: totalPaymentPesos
                                      default: '1000000'
                                    - set: totalPaymentDollar
                                      default: '0'
                                    - set: overQuotaValue
                                      default: '0'
                                    - set: valueTotalQuota
                                      default: '0'
                                    - set: stateCard
                                      default: active
                                - set: output.meta._version
                                  default: '1.0'
                                - set: output.links.self
                                  default: $(ctx.selfLink)
                              version: 1.0.0
                    version: 1.0.0
            - otherwise:
                - invoke:
                    title: call-endpoint
                    timeout: 60
                    verb: POST
                    cache-response: protocol
                    cache-ttl: 900
                    stop-on-error:
                      - ConnectionError
                      - SOAPError
                    version: 1.0.0
                    target-url: $(DPEndpoint)
                - gatewayscript:
                    title: validate-soap-response
                    version: 1.0.0
                    source: >-
                      const BusinessStatusTable = {

                          '12700824': '502',

                          '12700825': '503',

                          '12700826': '500',

                          '12700827': '502'

                      }



                      const HTTPErrors = {

                          '400': 'Bad Request',

                          '401': 'Unauthorized',

                          '404': 'Not Found',

                          '409': 'Conflict',

                          '500': 'Internal Server Error',

                          '502': 'Bad Gateway',

                          '503': 'Service Unavailable',

                          '504': 'Gateway Timeout'

                      }



                      //Read de input

                      const nssoap =
                      'http://schemas.xmlsoap.org/soap/envelope/',

                          tns
                      = 'http://grupobancolombia.com/intf/IL/esbXML/V3.0',

                          tns2
                      =
                      'http://grupobancolombia.com/intf/Producto/Tarjetas/ConsultaInformacionTarjetaCredito/V1.0';





                      apim.readInputAsXML(function (error, nodelist) {

                          if (error) {

                              apim.error('SOAPFormatError');

                              apim.setvariable('ctx.status', 500);

                          } else {



                              //read some variables

                              let soapEnv = nodelist.item(0);

                              let businessException
                      = soapEnv.getElementsByTagNameNS(tns2,
                      'businessException').item(0);



                              let status, description, code, title;



                              //validate if businessException

                              if (businessException) {

                                  const bpCode
                      =
                      businessException.getElementsByTagName('code').item(0).textContent;

                                  status = BusinessStatusTable[bpCode];

                                  description
                      =
                      businessException.getElementsByTagName('description').item(0).textContent;

                                  if (!status) {

                                      status = 500;

                                      title = 'Unexpected error';

                                  } else {

                                      title = HTTPErrors[status];

                                  }

                                  code = 'BP' + bpCode;

                                  apim.setvariable('ctx.Fault', true);

                              } else {

                                  let responsePayload
                      = soapEnv.getElementsByTagNameNS(nssoap, 'Fault').item(0);

                                  if (responsePayload) {

                                      let faultstring
                      =
                      responsePayload.getElementsByTagName('faultstring').item(0).textContent;

                                      description
                      =
                      responsePayload.getElementsByTagName('detail').item(0).textContent;

                                      if (faultstring) {

                                          //get the first three characters

                                          status
                      = faultstring.trim().substring(0, 3);

                                      }

                                      apim.setvariable('ctx.Fault', true);

                                      code = 'SP' + status;

                                      title = HTTPErrors[status];

                                  }

                              }

                              //set context variables

                              apim.setvariable('ctx.status', status);

                              apim.setvariable('ctx.description', description);

                              apim.setvariable('ctx.code', code);

                              apim.setvariable('ctx.title', title);

                          }

                      });
                - activity-log:
                    title: response-in-log
                    content: payload
                    error-content: payload
                    version: 1.0.0
                - switch:
                    title: switch
                    case:
                      - condition: $(ctx.Fault)==true
                        execute:
                          - map:
                              title: map-SOAPError
                              inputs:
                                status:
                                  schema:
                                    type: string
                                  variable: ctx.status
                                description:
                                  schema:
                                    type: string
                                  variable: ctx.description
                                code:
                                  schema:
                                    type: string
                                  variable: ctx.code
                                title:
                                  schema:
                                    type: string
                                  variable: ctx.title
                              outputs:
                                error:
                                  schema:
                                    $ref: '#/definitions/failure'
                                  variable: message.body
                                  content: application/json
                                statusCode:
                                  schema:
                                    type: string
                                  variable: message.status.code
                              actions:
                                - set: error.errors.detail
                                  from: description
                                - set: error.meta._messageId
                                  default: $(ctx.uid)
                                - set: error.meta._version
                                  default: '1.0'
                                - set: error.meta._requestDate
                                  default: $(ctx.tDateLoc)
                                - set: error.meta._clientRequest
                                  default: $(client.app.id)
                                - set: error.errors.href
                                  default: 'https://tools.ietf.org/html/rfc7235'
                                - set: error.errors.status
                                  from: status
                                - set: error.errors.code
                                  from: code
                                - set: error.errors.title
                                  from: title
                                - set: error.meta._responseSize
                                  default: '1'
                                - set: statusCode
                                  default: $(ctx.status)
                              version: 1.0.0
                      - otherwise:
                          - map:
                              title: map-Response
                              inputs:
                                input:
                                  schema:
                                    description: ''
                                    type: object
                                    properties:
                                      Envelope:
                                        type: object
                                        properties:
                                          Header:
                                            type: object
                                            properties:
                                              responseHeader:
                                                type: object
                                                properties:
                                                  systemId:
                                                    type: string
                                                    xml:
                                                      namespace: ''
                                                    name: systemId
                                                  messageId:
                                                    type: string
                                                    xml:
                                                      namespace: ''
                                                    name: messageId
                                                  timestamp:
                                                    type: string
                                                    xml:
                                                      namespace: ''
                                                    name: timestamp
                                                  messageContext:
                                                    type: object
                                                    properties:
                                                      property:
                                                        type: object
                                                        xml:
                                                          namespace: ''
                                                        name: property
                                                    xml:
                                                      namespace: ''
                                                    name: messageContext
                                                  responseStatus:
                                                    type: object
                                                    properties:
                                                      statusCode:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: statusCode
                                                    xml:
                                                      namespace: ''
                                                    name: responseStatus
                                                xml:
                                                  namespace: >-
                                                    http://grupobancolombia.com/ents/SOI/MessageFormat/V2.1
                                                  prefix: v2
                                                name: responseHeader
                                            name: Header
                                          Body:
                                            type: object
                                            properties:
                                              consultarInformacionDetalladaResponse:
                                                type: object
                                                properties:
                                                  informacionDetalladaTarjeta:
                                                    type: object
                                                    properties:
                                                      tipoDocumento:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: tipoDocumento
                                                      numeroDocumento:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: numeroDocumento
                                                      numeroTarjeta:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: numeroTarjeta
                                                      fechaPago:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: fechaPago
                                                      fechaVencimiento:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: fechaVencimiento
                                                      valorPagoMinimoPesos:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: valorPagoMinimoPesos
                                                      valorDeudaPesos:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: valorDeudaPesos
                                                      valorPagoMinimoDolares:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: valorPagoMinimoDolares
                                                      valorDeudaDolares:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: valorDeudaDolares
                                                      saldoTotalDisponible:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: saldoTotalDisponible
                                                      saldoDisponibleAvances:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: saldoDisponibleAvances
                                                      valorPagoTotalPesos:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: valorPagoTotalPesos
                                                      valorPagoTotalDolares:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: valorPagoTotalDolares
                                                      valorSobrecupo:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: valorSobrecupo
                                                      valorCupoTotal:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: valorCupoTotal
                                                      estadoTarjeta:
                                                        type: string
                                                        xml:
                                                          namespace: ''
                                                        name: estadoTarjeta
                                                    xml:
                                                      namespace: ''
                                                    name: informacionDetalladaTarjeta
                                                xml:
                                                  namespace: >-
                                                    http://grupobancolombia.com/intf/Producto/Tarjetas/ConsultaInformacionTarjetaCredito/V1.0
                                                  prefix: v1
                                                name: consultarInformacionDetalladaResponse
                                            name: Body
                                        xml:
                                          namespace: >-
                                            http://schemas.xmlsoap.org/soap/envelope/
                                          prefix: soapenv
                                        name: Envelope
                                    xml:
                                      namespace: ''
                                    example: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soapenv:Envelope\r\n    xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n    <soapenv:Header>\r\n        <v2:responseHeader\r\n            xmlns:v2=\"http://grupobancolombia.com/ents/SOI/MessageFormat/V2.1\">\r\n            <systemId>APIC</systemId>\r\n            <messageId>50403945418</messageId>\r\n            <timestamp>2017-08-29T15:44:14.000Z</timestamp>\r\n            <messageContext>\r\n                <property>\r\n                    <key/>\r\n                    <value/>\r\n                </property>\r\n            </messageContext>\r\n            <responseStatus>\r\n                <statusCode>Success</statusCode>\r\n            </responseStatus>\r\n        </v2:responseHeader>\r\n    </soapenv:Header>\r\n    <soapenv:Body>\r\n        <v1:consultarInformacionDetalladaResponse\r\n            xmlns:v1=\"http://grupobancolombia.com/intf/Producto/Tarjetas/ConsultaInformacionTarjetaCredito/V1.0\">\r\n            <informacionDetalladaTarjeta>\r\n                <tipoDocumento>CC</tipoDocumento>\r\n                <numeroDocumento>13245689</numeroDocumento>\r\n                <numeroTarjeta>16684</numeroTarjeta>\r\n                <fechaPago>2017-08-22T20:44:14.000Z</fechaPago>\r\n                <fechaVencimiento>2017-08-15T20:44:14.000Z</fechaVencimiento>\r\n                <valorPagoMinimoPesos>110000</valorPagoMinimoPesos>\r\n                <valorDeudaPesos>4000000</valorDeudaPesos>\r\n                <valorPagoMinimoDolares>0</valorPagoMinimoDolares>\r\n                <valorDeudaDolares>0</valorDeudaDolares>\r\n                <saldoTotalDisponible>3000000</saldoTotalDisponible>\r\n                <saldoDisponibleAvances>3000000</saldoDisponibleAvances>\r\n                <valorPagoTotalPesos>110000</valorPagoTotalPesos>\r\n                <valorPagoTotalDolares>0</valorPagoTotalDolares>\r\n                <valorSobrecupo>0</valorSobrecupo>\r\n                <valorCupoTotal>7000000</valorCupoTotal>\r\n                <estadoTarjeta>active</estadoTarjeta>\r\n            </informacionDetalladaTarjeta>\r\n        </v1:consultarInformacionDetalladaResponse>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>"
                                  variable: message.body
                                  content: application/xml
                              outputs:
                                output:
                                  schema:
                                    $ref: '#/definitions/successDetailsCreditCard'
                                  variable: message.body
                                  content: application/json
                              actions:
                                - set: output.meta._messageId
                                  default: $(ctx.uid)
                                - set: output.meta._requestDate
                                  default: $(ctx.tDateLoc)
                                - set: output.meta._responseSize
                                  default: '1'
                                - set: output.meta._clientRequest
                                  default: $(client.app.id)
                                - create: output.data
                                  actions:
                                    - set: header.type
                                      default: CreditCard
                                    - set: documentId
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.numeroDocumento
                                    - set: documentType
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.tipoDocumento
                                    - set: cardId
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.numeroTarjeta
                                    - set: paymentDate
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.fechaPago
                                    - set: expirationDate
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.fechaVencimiento
                                    - set: pesosMinimumPayment
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.valorPagoMinimoPesos
                                    - set: pesosDebtValue
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.valorDeudaPesos
                                    - set: dollarMinimumPayment
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.valorPagoMinimoDolares
                                    - set: dollarDebtValue
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.valorDeudaDolares
                                    - set: totalBalanceAvailable
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.saldoTotalDisponible
                                    - set: balanceAvailableAdvance
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.saldoDisponibleAvances
                                    - set: totalPaymentPesos
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.valorPagoTotalPesos
                                    - set: totalPaymentDollar
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.valorPagoTotalDolares
                                    - set: overQuotaValue
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.valorSobrecupo
                                    - set: valueTotalQuota
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.valorCupoTotal
                                    - set: stateCard
                                      from: >-
                                        #/input.Envelope.Body.consultarInformacionDetalladaResponse.informacionDetalladaTarjeta.estadoTarjeta
                                    - set: header.id
                                      default: CreditCard-$(ctx.cardId)-$(ctx.tDateLoc)
                                - set: output.meta._version
                                  default: '1.0'
                                - set: output.links.self
                                  default: $(ctx.selfLink)
                              version: 1.0.0
                    version: 1.0.0
          version: 1.0.0
      - activity-log:
          title: response-out-log
          content: activity
          error-content: payload
          version: 1.0.0
    catch:
      - errors:
          - PropertyError
        execute:
          - map:
              title: map-PropertyError
              inputs: {}
              outputs:
                statuscode:
                  schema:
                    type: string
                  variable: message.status.code
                failure:
                  schema:
                    $ref: '#/definitions/failure'
                  variable: message.body
                  content: application/json
              actions:
                - set: failure.meta._responseSize
                  default: '1'
                - set: statuscode
                  default: '400'
                - set: failure.meta._messageId
                  default: $(ctx.uid)
                - set: failure.meta._version
                  default: '1.0'
                - set: failure.meta._requestDate
                  default: $(ctx.tDateLoc)
                - set: failure.meta._clientRequest
                  default: $(client.app.id)
                - create: failure.errors
                  actions:
                    - set: href
                      default: 'https://tools.ietf.org/html/rfc7235'
                    - set: status
                      default: '400'
                    - set: detail
                      default: Mensaje enviado por sistema consumidor no es v?lido
                    - set: code
                      default: SA400
                    - set: title
                      default: Bad Request
              version: 1.0.0
      - errors:
          - SOAPError
        execute:
          - gatewayscript:
              title: validate-soap-error
              version: 1.0.0
              source: "const BusinessStatusTable = {\r\n    '12800884': '502',//Error en la consulta del dolar - certificaci?n\r\n    '12800886': '503',//Sistema no disponible, por favor intente mas tarde - certificaci?n\r\n    '12800885': '500',//Se ha bloqueado la direcci?n IP - certificaci?n\r\n    '12800887': '502',//Por problemas t?cnicos su transacci?n no puede atenderse, por favor intente m?s tarde - certificaci?n\r\n    '12700851': '502',//Error en la consulta del dolar - producci?n\r\n    '12700852': '503',//Sistema no disponible, por favor intente mas tarde - producci?n\r\n    '12700854': '500',//Se ha bloqueado la direcci?n IP - producci?n\r\n    '12700855': '502',//Por problemas t?cnicos su transacci?n no puede atenderse, por favor intente m?s tarde - producci?n\r\n    '12700856': '404'//Tarjeta no existe - producci?n\r\n}\r\n\r\nconst HTTPErrors = {\r\n    '400': 'Bad Request',\r\n    '401': 'Unauthorized',\r\n    '404': 'Not Found',\r\n    '409': 'Conflict',\r\n    '500': 'Internal Server Error',\r\n    '502': 'Bad Gateway',\r\n    '503': 'Service Unavailable',\r\n    '504': 'Gateway Timeout'\r\n}\r\n\r\n//Read de input\r\nconst nssoap = 'http://schemas.xmlsoap.org/soap/envelope/',\r\n    tns = 'http://grupobancolombia.com/intf/IL/esbXML/V3.0',\r\n    tns2 = 'http://grupobancolombia.com/intf/Producto/Tarjetas/ConsultaInformacionTarjetaCredito/V1.0';\r\n\r\n\r\napim.readInputAsXML(function (error, nodelist) {\r\n    if (error) {\r\n        apim.error('SOAPFormatError');\r\n        apim.setvariable('ctx.status', 500);\r\n    } else {\r\n\r\n        //read some variables\r\n        let soapEnv = nodelist.item(0);\r\n        let businessException = soapEnv.getElementsByTagNameNS(tns2, 'businessException').item(0);\r\n\r\n        let status, description, code, title;\r\n\r\n        //validate if businessException\r\n        if (businessException) {\r\n            const bpCode = businessException.getElementsByTagName('code').item(0).textContent;\r\n            status = BusinessStatusTable[bpCode];\r\n            description = businessException.getElementsByTagName('description').item(0).textContent;\r\n            if (!status) {\r\n                status = 500;\r\n                title = 'Unexpected error';\r\n            } else {\r\n                title = HTTPErrors[status];\r\n            }\r\n            code = 'BP' + bpCode;\r\n            apim.setvariable('ctx.Fault', true);\r\n        } else {\r\n            let responsePayload = soapEnv.getElementsByTagNameNS(nssoap, 'Fault').item(0);\r\n            if (responsePayload) {\r\n                let faultstring = responsePayload.getElementsByTagName('faultstring').item(0).textContent;\r\n                description = responsePayload.getElementsByTagName('detail').item(0).textContent;\r\n                if (faultstring) {\r\n                    //get the first three characters\r\n                    status = faultstring.trim().substring(0, 3);\r\n                }\r\n                apim.setvariable('ctx.Fault', true);\r\n                code = 'SP' + status;\r\n                title = HTTPErrors[status];\r\n            }\r\n        }\r\n        //set context variables\r\n        apim.setvariable('ctx.status', status);\r\n        apim.setvariable('ctx.description', description);\r\n        apim.setvariable('ctx.code', code);\r\n        apim.setvariable('ctx.title', title);\r\n    }\r\n});"
          - map:
              title: map-SOAPError
              inputs: {}
              outputs:
                failure:
                  schema:
                    $ref: '#/definitions/failure'
                  variable: message.body
                  content: application/json
                statusCode:
                  schema:
                    type: string
                  variable: message.status.code
              actions:
                - set: failure.meta._responseSize
                  default: '1'
                - set: statusCode
                  default: $(ctx.status)
                - set: failure.meta._messageId
                  default: $(ctx.uid)
                - set: failure.meta._version
                  default: '1.0'
                - set: failure.meta._requestDate
                  default: $(ctx.tDateLoc)
                - set: failure.meta._clientRequest
                  default: $(client.app.id)
                - create: failure.errors
                  actions:
                    - set: href
                      default: 'https://tools.ietf.org/html/rfc7235'
                    - set: status
                      default: $(ctx.status)
                    - set: detail
                      default: $(ctx.description)
                    - set: title
                      default: $(ctx.title)
                    - set: code
                      default: $(ctx.code)
              version: 1.0.0
      - errors:
          - SOAPFormatError
        execute:
          - map:
              title: map-SOAPFormatError
              inputs: {}
              outputs:
                failure:
                  schema:
                    $ref: '#/definitions/failure'
                  variable: message.body
                  content: application/json
                statusCode:
                  schema:
                    type: string
                  variable: message.status.code
              actions:
                - set: failure.meta._responseSize
                  default: '1'
                - set: statusCode
                  default: '500'
                - set: failure.meta._messageId
                  default: $(ctx.uid)
                - set: failure.meta._version
                  default: '1.0'
                - set: failure.meta._requestDate
                  default: $(ctx.tDateLoc)
                - set: failure.meta._clientRequest
                  default: $(client.app.id)
                - create: failure.errors
                  actions:
                    - set: href
                      default: 'https://tools.ietf.org/html/rfc7235'
                    - set: status
                      default: '500'
                    - set: detail
                      default: Error con mensajer?a SOAP
                    - set: title
                      default: Internal Server Error
                    - set: code
                      default: SA500
              version: 1.0.0
      - errors:
          - ConnectionError
        execute:
          - map:
              title: map-ConnectionError
              inputs: {}
              outputs:
                failure:
                  schema:
                    $ref: '#/definitions/failure'
                  variable: message.body
                  content: application/json
                statusCode:
                  schema:
                    type: string
                  variable: message.status.code
              actions:
                - set: statusCode
                  default: '500'
                - set: failure.meta._messageId
                  default: $(ctx.uid)
                - set: failure.meta._version
                  default: '1.0'
                - set: failure.meta._requestDate
                  default: $(ctx.tDateLoc)
                - set: failure.meta._clientRequest
                  default: $(client.app.id)
                - set: failure.meta._responseSize
                  default: '1'
                - create: failure.errors
                  actions:
                    - set: href
                      default: 'https://tools.ietf.org/html/rfc7235'
                    - set: status
                      default: '500'
                    - set: detail
                      default: Connection error
                    - set: title
                      default: Connection Error
                    - set: code
                      default: SA500
              version: 1.0.0
      - errors:
          - ParameterError
        execute:
          - map:
              title: map-ParameterError
              inputs: {}
              outputs:
                failure:
                  schema:
                    $ref: '#/definitions/failure'
                  variable: message.body
                  content: application/json
                statuscode:
                  schema:
                    type: string
                  variable: message.status.code
              actions:
                - set: statuscode
                  default: '400'
                - set: failure.meta._messageId
                  default: $(ctx.uid)
                - set: failure.meta._version
                  default: '1.0'
                - set: failure.meta._requestDate
                  default: $(ctx.tDateLoc)
                - set: failure.meta._clientRequest
                  default: $(client.app.id)
                - set: failure.meta._responseSize
                  default: '1'
                - create: failure.errors
                  actions:
                    - set: href
                      default: 'https://tools.ietf.org/html/rfc7235'
                    - set: status
                      default: '400'
                    - set: detail
                      default: Mensaje enviado por sistema consumidor no es v?lido
                    - set: code
                      default: SA400
                    - set: title
                      default: Bad Request
              version: 1.0.0
      - default:
          - gatewayscript:
              title: check-ids
              version: 1.0.0
              source: >
                if (!apim.getvariable('ctx.uid')) {

                    apim.setvariable('ctx.uid', (new
                Date()).valueOf().toString().substring(1, 12));

                }



                const requestDate = apim.getvariable('request.date');

                const today = new Date(requestDate);

                const tDateLoc = new Date(today.getTime() - (3600 *
                5000)).toISOString();

                apim.setvariable('ctx.tDateLoc', tDateLoc);
          - map:
              title: map-DefaultError
              inputs:
                uid:
                  schema:
                    type: string
                  variable: ctx.uid
                txDate:
                  schema:
                    type: string
                  variable: ctx.tDateLoc
              outputs:
                statuscode:
                  schema:
                    type: string
                  variable: message.status.code
                failure:
                  schema:
                    $ref: '#/definitions/failure'
                  variable: message.body
                  content: application/json
              actions:
                - set: statuscode
                  default: '500'
                - set: failure.meta._messageId
                  from: uid
                - set: failure.meta._version
                  default: '1.0'
                - set: failure.meta._requestDate
                  from: txDate
                - set: failure.meta._clientRequest
                  default: $(client.app.id)
                - set: failure.meta._responseSize
                  default: '1'
                - create: failure.errors
                  actions:
                    - set: href
                      default: 'https://tools.ietf.org/html/rfc7235'
                    - set: detail
                      default: Unexpected error
                    - set: title
                      default: Internal server error
                    - set: code
                      default: SA500
                    - set: status
                      default: '500'
              version: 1.0.0
securityDefinitions:
  OAuth - Provider from OTP - Flow Access Code:
    type: oauth2
    description: Proveedor de OAuth para autenticaci?n con One Time Password(OTP)
    flow: accessCode
    scopes:
      'Card-credit:read:user': Consulta de informaci?n de tarjetas de cr?dito
    x-tokenIntrospect:
      url: >-
        https://api.us.apiconnect.ibmcloud.com/bancolombiabluemix-dev/$(catalogName)/security/oauth-otp/oauth2/introspect
    tokenUrl: >-
      https://api.us.apiconnect.ibmcloud.com/bancolombiabluemix-dev/$(catalogName)/security/oauth-otp/oauth2/token
    authorizationUrl: >-
      https://api.us.apiconnect.ibmcloud.com/bancolombiabluemix-dev/$(catalogName)/security/oauth-otp/oauth2/authorize
security: []
tags:
  - name: Credit
    description: >-
      Informaci?n relacionada a los productos y operaciones de cr?ditos
      bancarios
  - name: Card
    description: >-
      Informaci?n relacionada a las tarjetas emitidas para los usuarios del
      banco.
x-API-Authors:
  Design:
    name: Ronald Gutierrez Lopez
    email: rongutie@bancolombia.com.co
  Development:
    name: Alexander Hinestroza Palacios
    email: ahinestr@bancolombia.com.co
  Review:
    name: ''
    email: ''
